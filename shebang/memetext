#!/usr/bin/env -S uv run --script
#
# /// script
# dependencies = ["typed-ffmpeg"]
# ///
import ffmpeg
import argparse
from pathlib import Path
import sys

argument_parser = argparse.ArgumentParser()
_ = argument_parser.add_argument("input-video-file", type=Path)
_ = argument_parser.add_argument("text")
_ = argument_parser.add_argument("output-video-file", type=Path)
_ = argument_parser.add_argument(
    "--font-file",
    nargs="?",
    default=Path("/usr/share/fonts/OTF/ComicShannsMonoNerdFontPropo-Regular.otf"),
    type=Path,
)
args = vars(argument_parser.parse_args())
input_video_file = args["input-video-file"]  # pyright: ignore[reportAny]
if not isinstance(input_video_file, Path):
    sys.exit(1)
text = args["text"]  # pyright: ignore[reportAny]
if not isinstance(text, str):
    sys.exit(2)
output_video_file = args["output-video-file"]  # pyright: ignore[reportAny]
if not isinstance(output_video_file, Path):
    sys.exit(3)
font_file = args["font_file"]  # pyright: ignore[reportAny]
if not isinstance(font_file, Path):
    sys.exit(4)

if not font_file.exists():
    print(f"{font_file} doesn't exist", file=sys.stderr)
    sys.exit(5)
if not input_video_file.exists():
    print(f"{input_video_file} doesn't exist", file=sys.stderr)
    sys.exit(6)

text_len = len(text)
f = ffmpeg.input(input_video_file).drawtext(
    fontfile=str(font_file),
    text=text,
    fontcolor="white",
    x="(w-text_w)/2",
    y="(h-text_h)*0.8",
    fontsize=f"(w/{text_len})",
)
if input_video_file.suffix == ".gif" and output_video_file.suffix == ".gif":
    f = f.split()
    f = f.video(1).paletteuse(f.video(0).palettegen())
elif output_video_file.suffix == ".gif":
    print("You'll want to use the gif command on the input file first, and use the output of that as the input for this")
    sys.exit(7)
f = f.copy().output(filename=output_video_file)
print(f.run())
